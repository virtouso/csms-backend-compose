version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - shared_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
       - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - shared_network

  kafka-init:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-init
    entrypoint: [ "/bin/sh", "-c", "sleep 10 && kafka-topics --create --topic request --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092 && kafka-topics --create --topic response --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092" ]
    depends_on:
      - kafka
    networks:
      - shared_network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - shared_network

networks:
  shared_network:
     external: true
     driver: bridge
